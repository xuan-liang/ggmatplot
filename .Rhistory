ggmatplot(x,y, xlim = c(5,6))
ggmatplot(x,y, xlim = c(5,6,7))
ggmatplot(x,y, shape ="red")
expect_error(ggmatplot(x, y, plot_type = "point", shape = "red"), "Can't find shape name:\n* 'red'")
ggmatplot(x, y, plot_type = "point", shape = "red")
expect_error(ggmatplot(x, y, plot_type = "point", shape = "red"), "Can't find shape name:\n* 'red'")
ggmatplot(x, y, plot_type = "line", linetype = "red")
ggmatplot(x, y, plot_type = "line", linetype = "2")
ggmatplot(y, plot_type = "line", xlim = 5)
expect_error(ggmatplot(y, plot_type = "line", xlim = 5), "`lims` must be a two-element vector")
devtools::load_all()
expect_error(ggmatplot(y, plot_type = "line", xlim = 5), "`lims` must be a two-element vector")
if(length(xlim == 2)) {
p <- p + xlim(xlim)
} else {
error("Xlim must be a two element vector")
}}
ggmatplot(y, plot_type = "line", xlim = 5)
devtools::load_all()
ggmatplot(y, plot_type = "line", xlim = 5)
devtools::load_all()
ggmatplot(y, plot_type = "line", xlim = 5)
devtools::load_all()
ggmatplot(y, plot_type = "line", xlim = 5)
devtools::load_all()
ggmatplot(y, plot_type = "line", xlim = 5)
ggmatplot(y, plot_type = "line", xlim = 5, ylim = 4)
ggmatplot(y, plot_type = "line", xlim = c(0,5), ylim = 4)
ggmatplot(y, plot_type = "line", xlim = c(-4,a)
)
ggmatplot(y, plot_type = "line", xlim = c(1,2,5))
ggmatplot(x, y, plot_type = "point", wrong = "")
# linetypes for plot types that don't require linetypes
expect_warning(ggmatplot(x, y, plot_type = "point", wrong = ""), "Ignoring unknown parameters: wrong ")
# linetypes for plot types that don't require linetypes
expect_warning(ggmatplot(x, y, plot_type = "point", wrong = ""), "* Ignoring unknown parameters: wrong")
ggmatplot(x, y, plot_type = "point", wrong = "")
devtools::test()
ggmatplot(y, plot_type = "density", xlim = c(3,4))
# x axis limits only
expect_doppelganger("density plot with x axis limits", expect_silent(ggmatplot(y, plot_type = "density", xlim = c(3,4))))
expect_silent(ggmatplot(y, plot_type = "density", xlim = c(3,4)))
devtools::test()
devtools::test()
ggmatplot(y, plot_type = "density", xlim = c(3,4))
devtools::test()
devtools::test()
devtools::test()
library(matplot)
install.packages("matplot")
library(matplot)
x <- 0:50/50
matplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)),
ylim = c(-2,2), type = "plobcsSh",
main= "matplot(,type = \"plobcsSh\" )")
x
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)))
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8))
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)))
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), plot_type = "both")
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "both")
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line")
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line", linetype = 5)
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line", linetype = 1)
devtools::build_readme()
devtools::build_rmd()
devtools::build_site()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line")
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line") + expand_limits(x = 0)
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line") + expand_limits(x = -2)
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line") + scale_alpha("Group")
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line") +
+ scale_colour_viridis_d()
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line") + scale_colour_viridis_d()
ggmatplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)), shape = c(1,2,3,4,5,6,7,8), plot_type = "line") + scale_colour_brewer()
devtools::build_readme()
devtools::build_site()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
devtools::build_readme()
devtools::document()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::build_readme()
devtools::build_site()
styler:::style_active_file()
# vector x
x <- c(rnorm(100, sd = 2))
# vector x
x <- c(rnorm(100, sd = 2))
# vector x
x <- c(rnorm(100, sd = 2))
# vector x
x <- c(rnorm(100, sd = 2))
# matrix y
y <- x * 0.5 + rnorm(100, sd = 1)
fit.y <- fitted(lm(y ~ x))
z <- cbind(y, fit.y)
ggmatplot(x, z)
# vector x
x <- c(a = rnorm(100, sd = 2))
# matrix y
y <- x * 0.5 + rnorm(100, sd = 1)
fit.y <- fitted(lm(y ~ x))
z <- cbind(y, fit.y)
ggmatplot(x, z)
# vector x
x <- c(rnorm(100, sd = 2)
# matrix y
y <- x * 0.5 + rnorm(100, sd = 1)
# vector x
x <- c(rnorm(100, sd = 2)
# matrix y
y <- x * 0.5 + rnorm(100, sd = 1)
# vector x
x <- c(rnorm(100, sd = 2))
# matrix y
y <- x * 0.5 + rnorm(100, sd = 1)
fit.y <- fitted(lm(y ~ x))
z <- cbind(response = y,
fitted = fit.y)
ggmatplot(x, z)
# vector x
x <- c(rnorm(100, sd = 2))
# matrix y
y <- x * 0.5 + rnorm(100, sd = 1)
fit.y <- fitted(lm(y ~ x))
z <- cbind(actual = y,
fitted = fit.y)
ggmatplot(x, z)
# matrix x
x <- 1:10
# matrix y
y <- cbind(
square = x^2,
cube = x^3
)
ggmatplot(x, y,
plot_type = "line",
size = 1,
color = c("blue", "purple"),
ylim = c(0, 750)
) +
theme_minimal()
USPersonalExpenditure
# matrix x
x <- rownames(USPersonalExpenditure)
# matrix y
y <- USPersonalExpenditure[, 1:5]
ggmatplot(x, y,
plot_type = "both",
xlab = "Category",
ylab = "Expenditure (in Billions of Dollars)",
legend_title = "Year",
legend_label = c(1940, 1945, 1950, 1955, 1960)
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
USPersonalExpenditure
# matrix x
x <- rownames(USPersonalExpenditure)
ggmatplot(x, USPersonalExpenditure,
plot_type = "both",
xlab = "Category",
ylab = "Expenditure (in Billions of Dollars)",
legend_title = "Year",
legend_label = c(1940, 1945, 1950, 1955, 1960)
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggmatplot(x, y,
plot_type = "line",
color = c("blue", "purple"),
ylim = c(0, 750)
) +
theme_minimal()
# matrix x
x <- 1:10
# matrix y
y <- cbind(
square = x^2,
cube = x^3
)
ggmatplot(x, y,
plot_type = "line",
color = c("blue", "purple"),
ylim = c(0, 750)
) +
theme_minimal()
ggmatplot(x, y,
plot_type = "line",
color = c("blue", "purple")
) +
theme_minimal()
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:2])
head(x, 5)
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = ..scaled..) +
theme_bw()
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:4])
head(x, 5)
ggmatplot(x,
plot_type = "boxplot",
alpha = 0, # removing fill values
xlab = "", ylab = ""
)
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:2])
head(x, 5)
ggmatplot(x,
plot_type = "violin",
color = c("#00AFBB", "#E7B800"),
xlab = "", ylab = ""
)
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:4])
head(x, 5)
ggmatplot(x,
plot_type = "histogram",
xlab = "Group",
color = "black",
fill = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF")
)
USPersonalExpenditure
# matrix x
x <- rownames(USPersonalExpenditure)
ggmatplot(x, USPersonalExpenditure,
plot_type = "both",
xlab = "Category",
ylab = "Expenditure (in Billions of Dollars)",
legend_title = "Year",
legend_label = c(1940, 1945, 1950, 1955, 1960)
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
str(USPersonalExpenditure)
USPersonalExpenditure
USPersonalExpenditure
# vector x
x <- rownames(USPersonalExpenditure)
ggmatplot(x, USPersonalExpenditure,
plot_type = "both",
xlab = "Category",
ylab = "Expenditure (in Billions of Dollars)",
legend_title = "Year",
legend_label = c(1940, 1945, 1950, 1955, 1960)
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# matrix X
x <- (iris_sub[, 1:2])
x
head(x, 5)
# matrix X
x <- (iris[, 1:2])
# matrix X
x <- (iris[, 1:2])
# matrix X
x <- (iris[, 1:2])
head(x, 5)
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = ..scaled..) +
theme_bw()
# matrix X
x <- (iris[, 1:2])
head(x, 5)
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = scaled) +
theme_bw()
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = [scaled]) +
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = [[scaled]]) +
# matrix X
x <- (iris[, 1:2])
head(x, 5)
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = [[scaled]]) +
iris
y <- (iris[, c(2,4)])
x <- (iris[, c(1,3)])
y <- (iris[, c(2,4)])
ggmatplot(x,y)
head(x)
x <- (iris[, c(1,3)])
head(x)
y <- (iris[, c(2,4)])
ggmatplot(x,y)
head(x)
x <- (iris[, c(1,3)])
head(x,5)
y <- (iris[, c(2,4)])
ggmatplot(x,y)
x <- (iris[, c(1,3)])
head(x,5)
y <- (iris[, c(2,4)])
head(y,5)
ggmatplot(x,y)
x <- (iris[, c(1,3)])
head(x,5)
y <- (iris[, c(2,4)])
head(y,5)
ggmatplot(x,y)
devtools::build_readme()
devtools::document()
devtools::build_site()
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = ..density..) +
theme_bw()
# matrix X
x <- (iris[, 1:2])
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = ..density..) +
theme_bw()
# matrix X
x <- (iris[, 1:2])
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = ..density..) +
theme_bw()
ggmatplot(x, plot_type = "density") +
# scaling the density estimate to a maximum of 1
aes(y = ..scaled..) +
theme_bw()
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:4])
head(x, 5)
ggmatplot(x,
plot_type = "boxplot",
alpha = 0, # removing fill values
xlab = "", ylab = ""
)
x <- (iris[, c(1,3)])
head(x,5)
y <- (iris[, c(2,4)])
head(y,5)
ggmatplot(x,y)
# matrix X
x <- (iris[, 1:4])
ggmatplot(x,
plot_type = "boxplot",
alpha = 0, # removing fill values
xlab = "", ylab = ""
)
# matrix x
x <- 1:10
# matrix y
y <- cbind(
square = x^2,
cube = x^3
)
ggmatplot(x, y,
plot_type = "line",
color = c("blue", "purple"),
ylim = c(0, 750)
) +
theme_minimal()
USPersonalExpenditure
# vector x
x <- rownames(USPersonalExpenditure)
ggmatplot(x, USPersonalExpenditure,
plot_type = "both",
xlab = "Category",
ylab = "Expenditure (in Billions of Dollars)",
legend_title = "Year",
legend_label = c(1940, 1945, 1950, 1955, 1960)
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# matrix X
x <- (iris[, 1:2])
ggmatplot(x, plot_type = "density") +
aes(y = ..scaled..) +
theme_bw()
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:2])
head(x, 5)
ggmatplot(x,
plot_type = "violin",
color = c("#00AFBB", "#E7B800"),
xlab = "", ylab = ""
)
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:2])
head(x, 5)
ggmatplot(x,
plot_type = "violin",
color = c("#00AFBB", "#E7B800"),
xlab = "", ylab = ""
)
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:4])
head(x, 5)
ggmatplot(x,
plot_type = "histogram",
xlab = "Group",
color = "black",
fill = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF")
)
iris_sub <- subset(iris, Species == "setosa")
# matrix X
x <- (iris_sub[, 1:2])
head(x, 5)
ggmatplot(x,
plot_type = "violin",
color = c("#00AFBB", "#E7B800"),
xlab = "", ylab = ""
)
# matrix X
x <- (iris[, 1:2])
ggmatplot(x,
plot_type = "violin",
color = c("#00AFBB", "#E7B800"),
xlab = "", ylab = ""
)
ggmatplot(x,y) +
facet_wrap(~Group)
ggmatplot(x,y)
x <- (iris[, c(1,3)])
head(x,5)
y <- (iris[, c(2,4)])
head(y,5)
ggmatplot(x,y)
ggmatplot(x,y) +
facet_wrap(Group)
ggmatplot(x,y) +
facet_wrap(~Group)
x <- (iris[, c(1,3)])
head(x,5)
y <- (iris[, c(2,4)])
head(y,5)
ggmatplot(x,y)
# matrix X
x <- (iris[, 1:2])
ggmatplot(x,
plot_type = "violin",
color = c("#00AFBB", "#E7B800"),
xlab = "", ylab = ""
)
# matrix X
x <- (iris[, 1:4])
ggmatplot(x,
plot_type = "histogram",
xlab = "Group",
color = "black",
fill = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF")
)
ggmatplot(x,
plot_type = "histogram",
xlab = "Group",
color = "black",
fill = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF")
) +
facet_wrap(~Group)
ggmatplot(x,
plot_type = "histogram",
xlab = "Group",
color = "black",
fill = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF")
) +
facet_wrap(~Group, scales = "free")
devtools::build_readme()
devtools::build_site()
iris
